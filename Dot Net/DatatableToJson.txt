/***************************************************************************** Without goingin to the depth of the functioning of this Method, i will try to give an overview* As soon as this method gets a DataTable it starts to convert it into JSON String,* it takes each row and in each row it grabs the cell name and its data.* This kind of JSON is very usefull when developer have to have Column name of the .* Values Can be Access on clien in this way. OBJ.HEAD[0].<ColumnName>* NOTE: One negative point. by this method user will not be able to call any cell by its index.* *************************************************************************/        public static string CreateJsonParameters(DataTable dt)        {            StringBuilder JsonString = new StringBuilder();            //Exception Handling                    if (dt != null && dt.Rows.Count > 0)            {                JsonString.Append("{ ");                JsonString.Append("\"Head\":[ ");                for (int i = 0; i < dt.Rows.Count; i++)                {                    JsonString.Append("{ ");                    for (int j = 0; j < dt.Columns.Count; j++)                    {                        if (j < dt.Columns.Count - 1)                        {                            JsonString.Append("\"" + dt.Columns[j].ColumnName + "\":" + "\"" + dt.Rows[i][j] + "\",");                        }                        else if (j == dt.Columns.Count - 1)                        {                            JsonString.Append("\"" + dt.Columns[j].ColumnName + "\":" + "\"" + dt.Rows[i][j] + "\"");                        }                    }                    /**/                    /**/                    /**/                    /*end Of String*/                    if (i == dt.Rows.Count - 1)                    {                        JsonString.Append("} ");                    }                    else                    {                        JsonString.Append("}, ");                    }                }                JsonString.Append("]}");                return JsonString.ToString();            }            else            {                return null;            }        }