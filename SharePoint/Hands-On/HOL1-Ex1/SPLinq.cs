//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4959
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HOL1_Ex1.VisualWebPart1 {
	using System;
	
	
	public partial class SPLinqDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public SPLinqDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Announcements")]
		public Microsoft.SharePoint.Linq.EntityList<AnnouncementsAnnouncement> Announcements {
			get {
				return this.GetList<AnnouncementsAnnouncement>("Announcements");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="ApprovalWF")]
		public Microsoft.SharePoint.Linq.EntityList<ApprovalWFDocument> ApprovalWF {
			get {
				return this.GetList<ApprovalWFDocument>("ApprovalWF");
			}
		}
		
		/// <summary>
		/// Task list for workflow.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="ApprovalWF Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> ApprovalWFTasks {
			get {
				return this.GetList<Item>("ApprovalWF Tasks");
			}
		}
		
		/// <summary>
		/// Task list for workflow.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Asp.Net Form Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> AspNetFormTasks {
			get {
				return this.GetList<Item>("Asp.Net Form Tasks");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Asp.Net Form Test")]
		public Microsoft.SharePoint.Linq.EntityList<AspNetFormTestItem> AspNetFormTest {
			get {
				return this.GetList<AspNetFormTestItem>("Asp.Net Form Test");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="CamlTestLib")]
		public Microsoft.SharePoint.Linq.EntityList<CamlTestLibDocument> CamlTestLib {
			get {
				return this.GetList<CamlTestLibDocument>("CamlTestLib");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Capital Expenditure Requests")]
		public Microsoft.SharePoint.Linq.EntityList<CapitalExpenditureRequestsItem> CapitalExpenditureRequests {
			get {
				return this.GetList<CapitalExpenditureRequestsItem>("Capital Expenditure Requests");
			}
		}
		
		/// <summary>
		/// Task list for workflow.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="CF Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> CFTasks {
			get {
				return this.GetList<Item>("CF Tasks");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="childlist")]
		public Microsoft.SharePoint.Linq.EntityList<ChildlistItem> Childlist {
			get {
				return this.GetList<ChildlistItem>("childlist");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Collect Feedback WF")]
		public Microsoft.SharePoint.Linq.EntityList<CollectFeedbackWFItem> CollectFeedbackWF {
			get {
				return this.GetList<CollectFeedbackWFItem>("Collect Feedback WF");
			}
		}
		
		/// <summary>
		/// Task list for workflow.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="CollectFeedback Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> CollectFeedbackTasks {
			get {
				return this.GetList<Item>("CollectFeedback Tasks");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="CollectSignature WF")]
		public Microsoft.SharePoint.Linq.EntityList<CollectSignatureWFItem> CollectSignatureWF {
			get {
				return this.GetList<CollectSignatureWFItem>("CollectSignature WF");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="date")]
		public Microsoft.SharePoint.Linq.EntityList<DateForm> Date {
			get {
				return this.GetList<DateForm>("date");
			}
		}
		
		/// <summary>
		/// This system library was created by the Publishing feature to store documents that are used on pages in this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Documents")]
		public Microsoft.SharePoint.Linq.EntityList<Document> Documents {
			get {
				return this.GetList<Document>("Documents");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Expenditure Request Approval Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> ExpenditureRequestApprovalTasks {
			get {
				return this.GetList<Item>("Expenditure Request Approval Tasks");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Expense Reports")]
		public Microsoft.SharePoint.Linq.EntityList<ExpenseReportsDocument> ExpenseReports {
			get {
				return this.GetList<ExpenseReportsDocument>("Expense Reports");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="External Data List")]
		public Microsoft.SharePoint.Linq.EntityList<Item> ExternalDataList {
			get {
				return this.GetList<Item>("External Data List");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="For Visio Workflow")]
		public Microsoft.SharePoint.Linq.EntityList<Item> ForVisioWorkflow {
			get {
				return this.GetList<Item>("For Visio Workflow");
			}
		}
		
		/// <summary>
		/// This system library was created by the Publishing feature to store images that are used on pages in this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Images")]
		public Microsoft.SharePoint.Linq.EntityList<RichMediaAsset> Images {
			get {
				return this.GetList<RichMediaAsset>("Images");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="InfoPathTask")]
		public Microsoft.SharePoint.Linq.EntityList<Item> InfoPathTask {
			get {
				return this.GetList<Item>("InfoPathTask");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="MyForm")]
		public Microsoft.SharePoint.Linq.EntityList<MyFormForm> MyForm {
			get {
				return this.GetList<MyFormForm>("MyForm");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="MyFormLibrary")]
		public Microsoft.SharePoint.Linq.EntityList<Form> MyFormLibrary {
			get {
				return this.GetList<Form>("MyFormLibrary");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="MyProjectTask")]
		public Microsoft.SharePoint.Linq.EntityList<Item> MyProjectTask {
			get {
				return this.GetList<Item>("MyProjectTask");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="MyStatusList")]
		public Microsoft.SharePoint.Linq.EntityList<Item> MyStatusList {
			get {
				return this.GetList<Item>("MyStatusList");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="MyTask")]
		public Microsoft.SharePoint.Linq.EntityList<Item> MyTask {
			get {
				return this.GetList<Item>("MyTask");
			}
		}
		
		/// <summary>
		/// This system library was created by the Publishing feature to store pages that are created in this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Pages")]
		public Microsoft.SharePoint.Linq.EntityList<Page> Pages {
			get {
				return this.GetList<Page>("Pages");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="parentlist")]
		public Microsoft.SharePoint.Linq.EntityList<Item> Parentlist {
			get {
				return this.GetList<Item>("parentlist");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="pic")]
		public Microsoft.SharePoint.Linq.EntityList<PicPicture> Pic {
			get {
				return this.GetList<PicPicture>("pic");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Project")]
		public Microsoft.SharePoint.Linq.EntityList<Item> Project {
			get {
				return this.GetList<Item>("Project");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="PTO Calendar")]
		public Microsoft.SharePoint.Linq.EntityList<PTOCalendarEvent> PTOCalendar {
			get {
				return this.GetList<PTOCalendarEvent>("PTO Calendar");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="PTO Tracker")]
		public Microsoft.SharePoint.Linq.EntityList<PTOTrackerItem> PTOTracker {
			get {
				return this.GetList<PTOTrackerItem>("PTO Tracker");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="PTO Workflow Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> PTOWorkflowTasks {
			get {
				return this.GetList<Item>("PTO Workflow Tasks");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Salary")]
		public Microsoft.SharePoint.Linq.EntityList<SalaryLink> Salary {
			get {
				return this.GetList<SalaryLink>("Salary");
			}
		}
		
		/// <summary>
		/// Task list for workflow.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="signature Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> SignatureTasks {
			get {
				return this.GetList<Item>("signature Tasks");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SignatureWF")]
		public Microsoft.SharePoint.Linq.EntityList<SignatureWFDocument> SignatureWF {
			get {
				return this.GetList<SignatureWFDocument>("SignatureWF");
			}
		}
		
		/// <summary>
		/// Use this library to store files which are included on pages within this site, such as images on Wiki pages.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Assets")]
		public Microsoft.SharePoint.Linq.EntityList<Document> SiteAssets {
			get {
				return this.GetList<Document>("Site Assets");
			}
		}
		
		/// <summary>
		/// Use this library to create and store pages on this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Pages")]
		public Microsoft.SharePoint.Linq.EntityList<WikiPage> SitePages {
			get {
				return this.GetList<WikiPage>("Site Pages");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SubProject")]
		public Microsoft.SharePoint.Linq.EntityList<SubProjectItem> SubProject {
			get {
				return this.GetList<SubProjectItem>("SubProject");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Support Requests")]
		public Microsoft.SharePoint.Linq.EntityList<SupportRequestsIssue> SupportRequests {
			get {
				return this.GetList<SupportRequestsIssue>("Support Requests");
			}
		}
		
		/// <summary>
		/// Task list for workflow.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> Tasks {
			get {
				return this.GetList<Item>("Tasks");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="test1")]
		public Microsoft.SharePoint.Linq.EntityList<Test1Contact> Test1 {
			get {
				return this.GetList<Test1Contact>("test1");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="test2")]
		public Microsoft.SharePoint.Linq.EntityList<Announcement> Test2 {
			get {
				return this.GetList<Announcement>("test2");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="TestList")]
		public Microsoft.SharePoint.Linq.EntityList<TestListItem> TestList {
			get {
				return this.GetList<TestListItem>("TestList");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="TripReportsLibrary")]
		public Microsoft.SharePoint.Linq.EntityList<TripReport> TripReportsLibrary {
			get {
				return this.GetList<TripReport>("TripReportsLibrary");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="WFDocLib")]
		public Microsoft.SharePoint.Linq.EntityList<WFDocLibDocument> WFDocLib {
			get {
				return this.GetList<WFDocLibDocument>("WFDocLib");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Work Orders")]
		public Microsoft.SharePoint.Linq.EntityList<WorkOrdersItem> WorkOrders {
			get {
				return this.GetList<WorkOrdersItem>("Work Orders");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Work Summary Workflow Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> WorkSummaryWorkflowTasks {
			get {
				return this.GetList<Item>("Work Summary Workflow Tasks");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="WorkFlow List")]
		public Microsoft.SharePoint.Linq.EntityList<WorkFlowListItem> WorkFlowList {
			get {
				return this.GetList<WorkFlowListItem>("WorkFlow List");
			}
		}
		
		/// <summary>
		/// This system library was created by the Publishing feature to store workflow tasks that are created in this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Workflow Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> WorkflowTasks {
			get {
				return this.GetList<Item>("Workflow Tasks");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="WorkSummary")]
		public Microsoft.SharePoint.Linq.EntityList<WorkSummaryItem> WorkSummary {
			get {
				return this.GetList<WorkSummaryItem>("WorkSummary");
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Announcement))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Folder))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Document))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Task))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AspNetFormTestItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CapitalExpenditureRequestsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ChildlistItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CollectFeedbackWFItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CollectSignatureWFItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Event))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PTOTrackerItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Link))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SubProjectItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Issue))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Contact))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TestListItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WorkOrdersItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WorkFlowListItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WorkSummaryItem))]
	public partial class Item : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _id;
		
		private System.Nullable<int> _version;
		
		private string _path;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		private string _title;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Item() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Id {
			get {
				return this._id;
			}
			set {
				if ((value != this._id)) {
					this.OnPropertyChanging("Id", this._id);
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Version {
			get {
				return this._version;
			}
			set {
				if ((value != this._version)) {
					this.OnPropertyChanging("Version", this._version);
					this._version = value;
					this.OnPropertyChanged("Version");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Path {
			get {
				return this._path;
			}
			set {
				if ((value != this._path)) {
					this.OnPropertyChanging("Path", this._path);
					this._path = value;
					this.OnPropertyChanged("Path");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				if ((value != this._title)) {
					this.OnPropertyChanging("Title", this._title);
					this._title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Create a new news item, status or other short piece of information.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Announcement", Id="0x0104")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AnnouncementsAnnouncement))]
	public partial class Announcement : Item {
		
		private string _body;
		
		private System.Nullable<System.DateTime> _expires;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Announcement() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_expires", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Expires {
			get {
				return this._expires;
			}
			set {
				if ((value != this._expires)) {
					this.OnPropertyChanging("Expires", this._expires);
					this._expires = value;
					this.OnPropertyChanged("Expires");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new folder.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Folder", Id="0x0120")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SummaryTask))]
	public partial class Folder : Item {
		
		private string _name;
		
		private System.Nullable<int> _itemChildCountId;
		
		private string _itemChildCountItemChildCount;
		
		private System.Nullable<int> _folderChildCountId;
		
		private string _folderChildCountFolderChildCount;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Folder() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
		public string Name {
			get {
				return this._name;
			}
			set {
				if ((value != this._name)) {
					this.OnPropertyChanging("Name", this._name);
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Folder.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Folder.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemChildCount", Storage="_itemChildCountId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> ItemChildCountId {
			get {
				return this._itemChildCountId;
			}
			set {
				if ((value != this._itemChildCountId)) {
					this.OnPropertyChanging("ItemChildCountId", this._itemChildCountId);
					this._itemChildCountId = value;
					this.OnPropertyChanged("ItemChildCountId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemChildCount", Storage="_itemChildCountItemChildCount", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string ItemChildCountItemChildCount {
			get {
				return this._itemChildCountItemChildCount;
			}
			set {
				if ((value != this._itemChildCountItemChildCount)) {
					this.OnPropertyChanging("ItemChildCountItemChildCount", this._itemChildCountItemChildCount);
					this._itemChildCountItemChildCount = value;
					this.OnPropertyChanged("ItemChildCountItemChildCount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FolderChildCount", Storage="_folderChildCountId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> FolderChildCountId {
			get {
				return this._folderChildCountId;
			}
			set {
				if ((value != this._folderChildCountId)) {
					this.OnPropertyChanging("FolderChildCountId", this._folderChildCountId);
					this._folderChildCountId = value;
					this.OnPropertyChanged("FolderChildCountId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FolderChildCount", Storage="_folderChildCountFolderChildCount", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string FolderChildCountFolderChildCount {
			get {
				return this._folderChildCountFolderChildCount;
			}
			set {
				if ((value != this._folderChildCountFolderChildCount)) {
					this.OnPropertyChanging("FolderChildCountFolderChildCount", this._folderChildCountFolderChildCount);
					this._folderChildCountFolderChildCount = value;
					this.OnPropertyChanged("FolderChildCountFolderChildCount");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ApprovalWFDocument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CamlTestLibDocument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Form))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ExpenseReportsDocument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(RichMediaAsset))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SystemPage))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Picture))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SignatureWFDocument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WikiPage))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TripReport))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WFDocLibDocument))]
	public partial class Document : Item {
		
		private string _name;
		
		private string _documentModifiedBy;
		
		private string _documentCreatedBy;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Document() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
		public string Name {
			get {
				return this._name;
			}
			set {
				if ((value != this._name)) {
					this.OnPropertyChanging("Name", this._name);
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_documentModifiedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentModifiedBy {
			get {
				return this._documentModifiedBy;
			}
			set {
				if ((value != this._documentModifiedBy)) {
					this.OnPropertyChanging("DocumentModifiedBy", this._documentModifiedBy);
					this._documentModifiedBy = value;
					this.OnPropertyChanged("DocumentModifiedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_documentCreatedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentCreatedBy {
			get {
				return this._documentCreatedBy;
			}
			set {
				if ((value != this._documentCreatedBy)) {
					this.OnPropertyChanging("DocumentCreatedBy", this._documentCreatedBy);
					this._documentCreatedBy = value;
					this.OnPropertyChanged("DocumentCreatedBy");
				}
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ApprovalWFTasksTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AspNetFormTasksTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CFTasksTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CollectFeedbackTasksTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ExpenditureRequestApprovalTasksTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(InfoPathTaskTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(MyProjectTaskTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(MyTaskTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PTOWorkflowTasksTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SignatureTasksTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TasksTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WorkSummaryWorkflowTasksTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WorkflowTasksTask))]
	public partial class Task : Item {
		
		private System.Nullable<double> _complete;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _startDate;
		
		protected System.Nullable<System.DateTime> _dueDate;
		
		private System.Nullable<Priority> _priority;
		
		protected System.Nullable<TaskStatus> _taskStatus;
		
		private System.Nullable<int> _assignedToId;
		
		private string _assignedTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Task() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_complete", FieldType="Number")]
		public System.Nullable<double> Complete {
			get {
				return this._complete;
			}
			set {
				if ((value != this._complete)) {
					this.OnPropertyChanging("Complete", this._complete);
					this._complete = value;
					this.OnPropertyChanged("Complete");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartDate {
			get {
				return this._startDate;
			}
			set {
				if ((value != this._startDate)) {
					this.OnPropertyChanging("StartDate", this._startDate);
					this._startDate = value;
					this.OnPropertyChanged("StartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_dueDate", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_priority", FieldType="Choice")]
		public System.Nullable<Priority> Priority {
			get {
				return this._priority;
			}
			set {
				if ((value != this._priority)) {
					this.OnPropertyChanging("Priority", this._priority);
					this._priority = value;
					this.OnPropertyChanged("Priority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_taskStatus", FieldType="Choice")]
		public virtual System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedToId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AssignedToId {
			get {
				return this._assignedToId;
			}
			set {
				if ((value != this._assignedToId)) {
					this.OnPropertyChanging("AssignedToId", this._assignedToId);
					this._assignedToId = value;
					this.OnPropertyChanged("AssignedToId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedTo", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string AssignedTo {
			get {
				return this._assignedTo;
			}
			set {
				if ((value != this._assignedTo)) {
					this.OnPropertyChanging("AssignedTo", this._assignedTo);
					this._assignedTo = value;
					this.OnPropertyChanged("AssignedTo");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new meeting, deadline or other event.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Event", Id="0x0102")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PTOCalendarEvent))]
	public partial class Event : Item {
		
		private string _location;
		
		protected System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		protected string _description;
		
		private System.Nullable<bool> _allDayEvent;
		
		private System.Nullable<bool> _recurrence;
		
		private System.Nullable<bool> _workspace;
		
		private System.Nullable<Category> _category;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Event() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Location", Storage="_location", FieldType="Text")]
		public string Location {
			get {
				return this._location;
			}
			set {
				if ((value != this._location)) {
					this.OnPropertyChanging("Location", this._location);
					this._location = value;
					this.OnPropertyChanged("Location");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EndDate", Storage="_endTime", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndTime {
			get {
				return this._endTime;
			}
			set {
				if ((value != this._endTime)) {
					this.OnPropertyChanging("EndTime", this._endTime);
					this._endTime = value;
					this.OnPropertyChanged("EndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_description", FieldType="Note")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fAllDayEvent", Storage="_allDayEvent", FieldType="AllDayEvent")]
		public System.Nullable<bool> AllDayEvent {
			get {
				return this._allDayEvent;
			}
			set {
				if ((value != this._allDayEvent)) {
					this.OnPropertyChanging("AllDayEvent", this._allDayEvent);
					this._allDayEvent = value;
					this.OnPropertyChanged("AllDayEvent");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fRecurrence", Storage="_recurrence", FieldType="Recurrence")]
		public System.Nullable<bool> Recurrence {
			get {
				return this._recurrence;
			}
			set {
				if ((value != this._recurrence)) {
					this.OnPropertyChanging("Recurrence", this._recurrence);
					this._recurrence = value;
					this.OnPropertyChanged("Recurrence");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkspaceLink", Storage="_workspace", FieldType="CrossProjectLink")]
		public System.Nullable<bool> Workspace {
			get {
				return this._workspace;
			}
			set {
				if ((value != this._workspace)) {
					this.OnPropertyChanging("Workspace", this._workspace);
					this._workspace = value;
					this.OnPropertyChanged("Workspace");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_category", FieldType="Choice")]
		public System.Nullable<Category> Category {
			get {
				return this._category;
			}
			set {
				if ((value != this._category)) {
					this.OnPropertyChanging("Category", this._category);
					this._category = value;
					this.OnPropertyChanged("Category");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new link to a Web page or other resource.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Link", Id="0x0105")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SalaryLink))]
	public partial class Link : Item {
		
		private string _uRL;
		
		private string _comments;
		
		private string _uRL0;
		
		private string _uRL1;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Link() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URL", Storage="_uRL", Required=true, FieldType="Url")]
		public string URL {
			get {
				return this._uRL;
			}
			set {
				if ((value != this._uRL)) {
					this.OnPropertyChanging("URL", this._uRL);
					this._uRL = value;
					this.OnPropertyChanged("URL");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URLwMenu", Storage="_uRL0", ReadOnly=true, FieldType="Computed")]
		public string URL0 {
			get {
				return this._uRL0;
			}
			set {
				if ((value != this._uRL0)) {
					this.OnPropertyChanging("URL0", this._uRL0);
					this._uRL0 = value;
					this.OnPropertyChanged("URL0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URLNoMenu", Storage="_uRL1", ReadOnly=true, FieldType="Computed")]
		public string URL1 {
			get {
				return this._uRL1;
			}
			set {
				if ((value != this._uRL1)) {
					this.OnPropertyChanging("URL1", this._uRL1);
					this._uRL1 = value;
					this.OnPropertyChanged("URL1");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Link.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Link.");
			}
		}
	}
	
	/// <summary>
	/// Track an issue or problem.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Issue", Id="0x0103")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SupportRequestsIssue))]
	public partial class Issue : Item {
		
		private string _description;
		
		private string _appendOnlyComments;
		
		protected System.Nullable<System.DateTime> _dueDate;
		
		private string _issueID;
		
		protected System.Nullable<IssueStatus> _issueStatus;
		
		private System.Nullable<Priority> _priority;
		
		private System.Nullable<Category> _category;
		
		private System.Nullable<int> _assignedToId;
		
		private string _assignedTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Issue() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comment", Storage="_description", FieldType="Note")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="V3Comments", Storage="_appendOnlyComments", FieldType="Note")]
		public string AppendOnlyComments {
			get {
				return this._appendOnlyComments;
			}
			set {
				if ((value != this._appendOnlyComments)) {
					this.OnPropertyChanging("AppendOnlyComments", this._appendOnlyComments);
					this._appendOnlyComments = value;
					this.OnPropertyChanged("AppendOnlyComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_dueDate", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkIssueIDNoMenu", Storage="_issueID", ReadOnly=true, FieldType="Computed")]
		public string IssueID {
			get {
				return this._issueID;
			}
			set {
				if ((value != this._issueID)) {
					this.OnPropertyChanging("IssueID", this._issueID);
					this._issueID = value;
					this.OnPropertyChanged("IssueID");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueStatus", Storage="_issueStatus", FieldType="Choice")]
		public virtual System.Nullable<IssueStatus> IssueStatus {
			get {
				return this._issueStatus;
			}
			set {
				if ((value != this._issueStatus)) {
					this.OnPropertyChanging("IssueStatus", this._issueStatus);
					this._issueStatus = value;
					this.OnPropertyChanged("IssueStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_priority", FieldType="Choice")]
		public System.Nullable<Priority> Priority {
			get {
				return this._priority;
			}
			set {
				if ((value != this._priority)) {
					this.OnPropertyChanging("Priority", this._priority);
					this._priority = value;
					this.OnPropertyChanged("Priority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_category", FieldType="Choice")]
		public System.Nullable<Category> Category {
			get {
				return this._category;
			}
			set {
				if ((value != this._category)) {
					this.OnPropertyChanging("Category", this._category);
					this._category = value;
					this.OnPropertyChanged("Category");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedToId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AssignedToId {
			get {
				return this._assignedToId;
			}
			set {
				if ((value != this._assignedToId)) {
					this.OnPropertyChanging("AssignedToId", this._assignedToId);
					this._assignedToId = value;
					this.OnPropertyChanged("AssignedToId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedTo", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string AssignedTo {
			get {
				return this._assignedTo;
			}
			set {
				if ((value != this._assignedTo)) {
					this.OnPropertyChanging("AssignedTo", this._assignedTo);
					this._assignedTo = value;
					this.OnPropertyChanged("AssignedTo");
				}
			}
		}
	}
	
	/// <summary>
	/// Store information about a business or personal contact.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Contact", Id="0x0106")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Test1Contact))]
	public partial class Contact : Item {
		
		private string _lastName;
		
		private string _lastName0;
		
		private string _firstName;
		
		private string _fullName;
		
		protected string _eMail;
		
		private string _company;
		
		private string _jobTitle;
		
		private string _businessPhone;
		
		private string _homePhone;
		
		private string _mobileNumber;
		
		private string _faxNumber;
		
		private string _address;
		
		private string _city;
		
		private string _stateProvince;
		
		private string _zIPPostalCode;
		
		private string _countryRegion;
		
		private string _webPage;
		
		private string _comments;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Contact() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTitle", Storage="_lastName", ReadOnly=true, FieldType="Computed")]
		public string LastName {
			get {
				return this._lastName;
			}
			set {
				if ((value != this._lastName)) {
					this.OnPropertyChanging("LastName", this._lastName);
					this._lastName = value;
					this.OnPropertyChanged("LastName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTitleNoMenu", Storage="_lastName0", ReadOnly=true, FieldType="Computed")]
		public string LastName0 {
			get {
				return this._lastName0;
			}
			set {
				if ((value != this._lastName0)) {
					this.OnPropertyChanging("LastName0", this._lastName0);
					this._lastName0 = value;
					this.OnPropertyChanged("LastName0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FirstName", Storage="_firstName", FieldType="Text")]
		public string FirstName {
			get {
				return this._firstName;
			}
			set {
				if ((value != this._firstName)) {
					this.OnPropertyChanging("FirstName", this._firstName);
					this._firstName = value;
					this.OnPropertyChanged("FirstName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FullName", Storage="_fullName", FieldType="Text")]
		public string FullName {
			get {
				return this._fullName;
			}
			set {
				if ((value != this._fullName)) {
					this.OnPropertyChanging("FullName", this._fullName);
					this._fullName = value;
					this.OnPropertyChanged("FullName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EMail", Storage="_eMail", FieldType="Text")]
		public virtual string EMail {
			get {
				return this._eMail;
			}
			set {
				if ((value != this._eMail)) {
					this.OnPropertyChanging("EMail", this._eMail);
					this._eMail = value;
					this.OnPropertyChanged("EMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Company", Storage="_company", FieldType="Text")]
		public string Company {
			get {
				return this._company;
			}
			set {
				if ((value != this._company)) {
					this.OnPropertyChanging("Company", this._company);
					this._company = value;
					this.OnPropertyChanged("Company");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="JobTitle", Storage="_jobTitle", FieldType="Text")]
		public string JobTitle {
			get {
				return this._jobTitle;
			}
			set {
				if ((value != this._jobTitle)) {
					this.OnPropertyChanging("JobTitle", this._jobTitle);
					this._jobTitle = value;
					this.OnPropertyChanged("JobTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkPhone", Storage="_businessPhone", FieldType="Text")]
		public string BusinessPhone {
			get {
				return this._businessPhone;
			}
			set {
				if ((value != this._businessPhone)) {
					this.OnPropertyChanging("BusinessPhone", this._businessPhone);
					this._businessPhone = value;
					this.OnPropertyChanged("BusinessPhone");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HomePhone", Storage="_homePhone", FieldType="Text")]
		public string HomePhone {
			get {
				return this._homePhone;
			}
			set {
				if ((value != this._homePhone)) {
					this.OnPropertyChanging("HomePhone", this._homePhone);
					this._homePhone = value;
					this.OnPropertyChanged("HomePhone");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CellPhone", Storage="_mobileNumber", FieldType="Text")]
		public string MobileNumber {
			get {
				return this._mobileNumber;
			}
			set {
				if ((value != this._mobileNumber)) {
					this.OnPropertyChanging("MobileNumber", this._mobileNumber);
					this._mobileNumber = value;
					this.OnPropertyChanged("MobileNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkFax", Storage="_faxNumber", FieldType="Text")]
		public string FaxNumber {
			get {
				return this._faxNumber;
			}
			set {
				if ((value != this._faxNumber)) {
					this.OnPropertyChanging("FaxNumber", this._faxNumber);
					this._faxNumber = value;
					this.OnPropertyChanged("FaxNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkAddress", Storage="_address", FieldType="Note")]
		public string Address {
			get {
				return this._address;
			}
			set {
				if ((value != this._address)) {
					this.OnPropertyChanging("Address", this._address);
					this._address = value;
					this.OnPropertyChanged("Address");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCity", Storage="_city", FieldType="Text")]
		public string City {
			get {
				return this._city;
			}
			set {
				if ((value != this._city)) {
					this.OnPropertyChanging("City", this._city);
					this._city = value;
					this.OnPropertyChanged("City");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkState", Storage="_stateProvince", FieldType="Text")]
		public string StateProvince {
			get {
				return this._stateProvince;
			}
			set {
				if ((value != this._stateProvince)) {
					this.OnPropertyChanging("StateProvince", this._stateProvince);
					this._stateProvince = value;
					this.OnPropertyChanged("StateProvince");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkZip", Storage="_zIPPostalCode", FieldType="Text")]
		public string ZIPPostalCode {
			get {
				return this._zIPPostalCode;
			}
			set {
				if ((value != this._zIPPostalCode)) {
					this.OnPropertyChanging("ZIPPostalCode", this._zIPPostalCode);
					this._zIPPostalCode = value;
					this.OnPropertyChanged("ZIPPostalCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCountry", Storage="_countryRegion", FieldType="Text")]
		public string CountryRegion {
			get {
				return this._countryRegion;
			}
			set {
				if ((value != this._countryRegion)) {
					this.OnPropertyChanging("CountryRegion", this._countryRegion);
					this._countryRegion = value;
					this.OnPropertyChanged("CountryRegion");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WebPage", Storage="_webPage", FieldType="Url")]
		public string WebPage {
			get {
				return this._webPage;
			}
			set {
				if ((value != this._webPage)) {
					this.OnPropertyChanging("WebPage", this._webPage);
					this._webPage = value;
					this.OnPropertyChanged("WebPage");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ApprovalWFTasksSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AspNetFormTasksSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CFTasksSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CollectFeedbackTasksSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ExpenditureRequestApprovalTasksSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(InfoPathTaskSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(MyProjectTaskSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(MyTaskSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PTOWorkflowTasksSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SignatureTasksSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TasksSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WorkSummaryWorkflowTasksSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WorkflowTasksSummaryTask))]
	public partial class SummaryTask : Folder {
		
		private System.Nullable<double> _complete;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _startDate;
		
		protected System.Nullable<System.DateTime> _dueDate;
		
		private System.Nullable<Priority> _priority;
		
		protected System.Nullable<TaskStatus> _taskStatus;
		
		private System.Nullable<int> _assignedToId;
		
		private string _assignedTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SummaryTask() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_complete", FieldType="Number")]
		public System.Nullable<double> Complete {
			get {
				return this._complete;
			}
			set {
				if ((value != this._complete)) {
					this.OnPropertyChanging("Complete", this._complete);
					this._complete = value;
					this.OnPropertyChanged("Complete");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartDate {
			get {
				return this._startDate;
			}
			set {
				if ((value != this._startDate)) {
					this.OnPropertyChanging("StartDate", this._startDate);
					this._startDate = value;
					this.OnPropertyChanged("StartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_dueDate", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_priority", FieldType="Choice")]
		public System.Nullable<Priority> Priority {
			get {
				return this._priority;
			}
			set {
				if ((value != this._priority)) {
					this.OnPropertyChanging("Priority", this._priority);
					this._priority = value;
					this.OnPropertyChanged("Priority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_taskStatus", FieldType="Choice")]
		public virtual System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedToId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AssignedToId {
			get {
				return this._assignedToId;
			}
			set {
				if ((value != this._assignedToId)) {
					this.OnPropertyChanging("AssignedToId", this._assignedToId);
					this._assignedToId = value;
					this.OnPropertyChanged("AssignedToId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedTo", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string AssignedTo {
			get {
				return this._assignedTo;
			}
			set {
				if ((value != this._assignedTo)) {
					this.OnPropertyChanging("AssignedTo", this._assignedTo);
					this._assignedTo = value;
					this.OnPropertyChanged("AssignedTo");
				}
			}
		}
	}
	
	/// <summary>
	/// Fill out this form.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Form", Id="0x010101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DateForm))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(MyFormForm))]
	public partial class Form : Document {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Form() {
			this.OnCreated();
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Form.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Form.");
			}
		}
	}
	
	/// <summary>
	/// Upload an image or a photograph.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Picture", Id="0x010102")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PicPicture))]
	public partial class Picture : Document {
		
		private string _preview;
		
		private string _fileType;
		
		private string _pictureSize;
		
		private System.Nullable<int> _pictureWidth;
		
		private System.Nullable<int> _pictureHeight;
		
		private System.Nullable<System.DateTime> _datePictureTaken;
		
		protected string _comments;
		
		private string _selectionCheckbox;
		
		private string _name0;
		
		private string _requiredField;
		
		private string _keywords;
		
		private string _thumbnail;
		
		private string _webPreview;
		
		private string _previewImageURL;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Picture() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PreviewOnForm", Storage="_preview", FieldType="Computed")]
		public string Preview {
			get {
				return this._preview;
			}
			set {
				if ((value != this._preview)) {
					this.OnPropertyChanging("Preview", this._preview);
					this._preview = value;
					this.OnPropertyChanged("Preview");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileType", Storage="_fileType", FieldType="Computed")]
		public string FileType {
			get {
				return this._fileType;
			}
			set {
				if ((value != this._fileType)) {
					this.OnPropertyChanging("FileType", this._fileType);
					this._fileType = value;
					this.OnPropertyChanged("FileType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageSize", Storage="_pictureSize", FieldType="Computed")]
		public string PictureSize {
			get {
				return this._pictureSize;
			}
			set {
				if ((value != this._pictureSize)) {
					this.OnPropertyChanging("PictureSize", this._pictureSize);
					this._pictureSize = value;
					this.OnPropertyChanged("PictureSize");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageWidth", Storage="_pictureWidth", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> PictureWidth {
			get {
				return this._pictureWidth;
			}
			set {
				if ((value != this._pictureWidth)) {
					this.OnPropertyChanging("PictureWidth", this._pictureWidth);
					this._pictureWidth = value;
					this.OnPropertyChanged("PictureWidth");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageHeight", Storage="_pictureHeight", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> PictureHeight {
			get {
				return this._pictureHeight;
			}
			set {
				if ((value != this._pictureHeight)) {
					this.OnPropertyChanging("PictureHeight", this._pictureHeight);
					this._pictureHeight = value;
					this.OnPropertyChanged("PictureHeight");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageCreateDate", Storage="_datePictureTaken", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DatePictureTaken {
			get {
				return this._datePictureTaken;
			}
			set {
				if ((value != this._datePictureTaken)) {
					this.OnPropertyChanging("DatePictureTaken", this._datePictureTaken);
					this._datePictureTaken = value;
					this.OnPropertyChanged("DatePictureTaken");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
		public virtual string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SelectedFlag", Storage="_selectionCheckbox", ReadOnly=true, FieldType="Computed")]
		public string SelectionCheckbox {
			get {
				return this._selectionCheckbox;
			}
			set {
				if ((value != this._selectionCheckbox)) {
					this.OnPropertyChanging("SelectionCheckbox", this._selectionCheckbox);
					this._selectionCheckbox = value;
					this.OnPropertyChanged("SelectionCheckbox");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NameOrTitle", Storage="_name0", ReadOnly=true, FieldType="Computed")]
		public string Name0 {
			get {
				return this._name0;
			}
			set {
				if ((value != this._name0)) {
					this.OnPropertyChanging("Name0", this._name0);
					this._name0 = value;
					this.OnPropertyChanged("Name0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RequiredField", Storage="_requiredField", ReadOnly=true, FieldType="Computed")]
		public string RequiredField {
			get {
				return this._requiredField;
			}
			set {
				if ((value != this._requiredField)) {
					this.OnPropertyChanging("RequiredField", this._requiredField);
					this._requiredField = value;
					this.OnPropertyChanged("RequiredField");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Keywords", Storage="_keywords", FieldType="Note")]
		public string Keywords {
			get {
				return this._keywords;
			}
			set {
				if ((value != this._keywords)) {
					this.OnPropertyChanging("Keywords", this._keywords);
					this._keywords = value;
					this.OnPropertyChanged("Keywords");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Thumbnail", Storage="_thumbnail", ReadOnly=true, FieldType="Computed")]
		public string Thumbnail {
			get {
				return this._thumbnail;
			}
			set {
				if ((value != this._thumbnail)) {
					this.OnPropertyChanging("Thumbnail", this._thumbnail);
					this._thumbnail = value;
					this.OnPropertyChanged("Thumbnail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Preview", Storage="_webPreview", ReadOnly=true, FieldType="Computed")]
		public string WebPreview {
			get {
				return this._webPreview;
			}
			set {
				if ((value != this._webPreview)) {
					this.OnPropertyChanging("WebPreview", this._webPreview);
					this._webPreview = value;
					this.OnPropertyChanged("WebPreview");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlternateThumbnailUrl", Storage="_previewImageURL", FieldType="Url")]
		public virtual string PreviewImageURL {
			get {
				return this._previewImageURL;
			}
			set {
				if ((value != this._previewImageURL)) {
					this.OnPropertyChanging("PreviewImageURL", this._previewImageURL);
					this._previewImageURL = value;
					this.OnPropertyChanged("PreviewImageURL");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new wiki page.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Wiki Page", Id="0x010108")]
	public partial class WikiPage : Document {
		
		private string _wikiContent;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WikiPage() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WikiField", Storage="_wikiContent", FieldType="Note")]
		public string WikiContent {
			get {
				return this._wikiContent;
			}
			set {
				if ((value != this._wikiContent)) {
					this.OnPropertyChanging("WikiContent", this._wikiContent);
					this._wikiContent = value;
					this.OnPropertyChanged("WikiContent");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Asp.Net Form Test")]
	public partial class AspNetFormTestItem : Item {
		
		private System.Nullable<int> _testASPNETWorkflowFormsWorkflow;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AspNetFormTestItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TestASPN", Storage="_testASPNETWorkflowFormsWorkflow", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> TestASPNETWorkflowFormsWorkflow {
			get {
				return this._testASPNETWorkflowFormsWorkflow;
			}
			set {
				if ((value != this._testASPNETWorkflowFormsWorkflow)) {
					this.OnPropertyChanging("TestASPNETWorkflowFormsWorkflow", this._testASPNETWorkflowFormsWorkflow);
					this._testASPNETWorkflowFormsWorkflow = value;
					this.OnPropertyChanged("TestASPNETWorkflowFormsWorkflow");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Capital Expenditure Requests")]
	public partial class CapitalExpenditureRequestsItem : Item {
		
		private string _requestDescription;
		
		private System.Nullable<double> _dollarAmount;
		
		private System.Nullable<int> _expenditureRequestApproval2;
		
		private System.Nullable<int> _expenditureRequestApproval;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CapitalExpenditureRequestsItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Request_x0020_Description", Storage="_requestDescription", FieldType="Note")]
		public string RequestDescription {
			get {
				return this._requestDescription;
			}
			set {
				if ((value != this._requestDescription)) {
					this.OnPropertyChanging("RequestDescription", this._requestDescription);
					this._requestDescription = value;
					this.OnPropertyChanged("RequestDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Dollar_x0020_Amount", Storage="_dollarAmount", FieldType="Currency")]
		public System.Nullable<double> DollarAmount {
			get {
				return this._dollarAmount;
			}
			set {
				if ((value != this._dollarAmount)) {
					this.OnPropertyChanging("DollarAmount", this._dollarAmount);
					this._dollarAmount = value;
					this.OnPropertyChanged("DollarAmount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expendit", Storage="_expenditureRequestApproval2", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> ExpenditureRequestApproval2 {
			get {
				return this._expenditureRequestApproval2;
			}
			set {
				if ((value != this._expenditureRequestApproval2)) {
					this.OnPropertyChanging("ExpenditureRequestApproval2", this._expenditureRequestApproval2);
					this._expenditureRequestApproval2 = value;
					this.OnPropertyChanged("ExpenditureRequestApproval2");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expendit0", Storage="_expenditureRequestApproval", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> ExpenditureRequestApproval {
			get {
				return this._expenditureRequestApproval;
			}
			set {
				if ((value != this._expenditureRequestApproval)) {
					this.OnPropertyChanging("ExpenditureRequestApproval", this._expenditureRequestApproval);
					this._expenditureRequestApproval = value;
					this.OnPropertyChanged("ExpenditureRequestApproval");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="childlist")]
	public partial class ChildlistItem : Item {
		
		private Microsoft.SharePoint.Linq.EntityRef<Item> _parentid;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ChildlistItem() {
			this._parentid = new Microsoft.SharePoint.Linq.EntityRef<Item>();
			this._parentid.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnParentidSync);
			this._parentid.OnChanged += new System.EventHandler(this.OnParentidChanged);
			this._parentid.OnChanging += new System.EventHandler(this.OnParentidChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="parentid", Storage="_parentid", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="parentlist")]
		public Item Parentid {
			get {
				return this._parentid.GetEntity();
			}
			set {
				this._parentid.SetEntity(value);
			}
		}
		
		private void OnParentidChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Parentid", this._parentid.Clone());
		}
		
		private void OnParentidChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Parentid");
		}
		
		private void OnParentidSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Collect Feedback WF")]
	public partial class CollectFeedbackWFItem : Item {
		
		private string _content;
		
		private System.Nullable<int> _cF;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CollectFeedbackWFItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Content", Storage="_content", FieldType="Note")]
		public string Content {
			get {
				return this._content;
			}
			set {
				if ((value != this._content)) {
					this.OnPropertyChanging("Content", this._content);
					this._content = value;
					this.OnPropertyChanged("Content");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CF", Storage="_cF", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> CF {
			get {
				return this._cF;
			}
			set {
				if ((value != this._cF)) {
					this.OnPropertyChanging("CF", this._cF);
					this._cF = value;
					this.OnPropertyChanged("CF");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="CollectSignature WF")]
	public partial class CollectSignatureWFItem : Item {
		
		private string _content;
		
		private System.Nullable<int> _signature;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CollectSignatureWFItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Content", Storage="_content", FieldType="Note")]
		public string Content {
			get {
				return this._content;
			}
			set {
				if ((value != this._content)) {
					this.OnPropertyChanging("Content", this._content);
					this._content = value;
					this.OnPropertyChanged("Content");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="signatur", Storage="_signature", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> Signature {
			get {
				return this._signature;
			}
			set {
				if ((value != this._signature)) {
					this.OnPropertyChanging("Signature", this._signature);
					this._signature = value;
					this.OnPropertyChanged("Signature");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="PTO Tracker")]
	public partial class PTOTrackerItem : Item {
		
		private System.Nullable<double> _availableHours;
		
		private System.Nullable<double> _usedHours;
		
		private Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>> _employeeId;
		
		private Microsoft.SharePoint.Linq.LookupList<string> _employeeImnName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PTOTrackerItem() {
			this._employeeId = new Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>>();
			this._employeeId.OnChanged += new System.EventHandler(this.OnEmployeeIdChanged);
			this._employeeId.OnChanging += new System.EventHandler(this.OnEmployeeIdChanging);
			this._employeeImnName = new Microsoft.SharePoint.Linq.LookupList<string>();
			this._employeeImnName.OnChanged += new System.EventHandler(this.OnEmployeeImnNameChanged);
			this._employeeImnName.OnChanging += new System.EventHandler(this.OnEmployeeImnNameChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Available_x0020_Hours", Storage="_availableHours", FieldType="Number")]
		public System.Nullable<double> AvailableHours {
			get {
				return this._availableHours;
			}
			set {
				if ((value != this._availableHours)) {
					this.OnPropertyChanging("AvailableHours", this._availableHours);
					this._availableHours = value;
					this.OnPropertyChanged("AvailableHours");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Used_x0020_Hours", Storage="_usedHours", FieldType="Number")]
		public System.Nullable<double> UsedHours {
			get {
				return this._usedHours;
			}
			set {
				if ((value != this._usedHours)) {
					this.OnPropertyChanging("UsedHours", this._usedHours);
					this._usedHours = value;
					this.OnPropertyChanged("UsedHours");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Employee", Storage="_employeeId", FieldType="User", IsLookupId=true)]
		public System.Collections.Generic.IList<System.Nullable<int>> EmployeeId {
			get {
				return this._employeeId;
			}
			set {
				this._employeeId.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Employee", Storage="_employeeImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public System.Collections.Generic.IList<string> EmployeeImnName {
			get {
				return this._employeeImnName;
			}
			set {
				this._employeeImnName.Assign(value);
			}
		}
		
		private void OnEmployeeIdChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeeId", this._employeeId.Clone());
		}
		
		private void OnEmployeeIdChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeeId");
		}
		
		private void OnEmployeeImnNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeeImnName", this._employeeImnName.Clone());
		}
		
		private void OnEmployeeImnNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeeImnName");
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="SubProject")]
	public partial class SubProjectItem : Item {
		
		private Microsoft.SharePoint.Linq.EntityRef<Item> _parentProjectName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SubProjectItem() {
			this._parentProjectName = new Microsoft.SharePoint.Linq.EntityRef<Item>();
			this._parentProjectName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnParentProjectNameSync);
			this._parentProjectName.OnChanged += new System.EventHandler(this.OnParentProjectNameChanged);
			this._parentProjectName.OnChanging += new System.EventHandler(this.OnParentProjectNameChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ParentProjectName", Storage="_parentProjectName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Project")]
		public Item ParentProjectName {
			get {
				return this._parentProjectName.GetEntity();
			}
			set {
				this._parentProjectName.SetEntity(value);
			}
		}
		
		private void OnParentProjectNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ParentProjectName", this._parentProjectName.Clone());
		}
		
		private void OnParentProjectNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ParentProjectName");
		}
		
		private void OnParentProjectNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="TestList")]
	public partial class TestListItem : Item {
		
		private System.Nullable<int> _testWorkflow;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TestListItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TestWork", Storage="_testWorkflow", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> TestWorkflow {
			get {
				return this._testWorkflow;
			}
			set {
				if ((value != this._testWorkflow)) {
					this.OnPropertyChanging("TestWorkflow", this._testWorkflow);
					this._testWorkflow = value;
					this.OnPropertyChanged("TestWorkflow");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Work Orders")]
	public partial class WorkOrdersItem : Item {
		
		private System.Nullable<Status> _status;
		
		private System.Nullable<DormitoryName> _dormitoryName;
		
		private System.Nullable<WorkCategory> _workCategory;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WorkOrdersItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_status", FieldType="Choice")]
		public System.Nullable<Status> Status {
			get {
				return this._status;
			}
			set {
				if ((value != this._status)) {
					this.OnPropertyChanging("Status", this._status);
					this._status = value;
					this.OnPropertyChanged("Status");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Dormitory_x0020_Name", Storage="_dormitoryName", FieldType="Choice")]
		public System.Nullable<DormitoryName> DormitoryName {
			get {
				return this._dormitoryName;
			}
			set {
				if ((value != this._dormitoryName)) {
					this.OnPropertyChanging("DormitoryName", this._dormitoryName);
					this._dormitoryName = value;
					this.OnPropertyChanged("DormitoryName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Work_x0020_Category", Storage="_workCategory", FieldType="Choice")]
		public System.Nullable<WorkCategory> WorkCategory {
			get {
				return this._workCategory;
			}
			set {
				if ((value != this._workCategory)) {
					this.OnPropertyChanging("WorkCategory", this._workCategory);
					this._workCategory = value;
					this.OnPropertyChanged("WorkCategory");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="WorkFlow List")]
	public partial class WorkFlowListItem : Item {
		
		private System.Nullable<int> _myWorkflow;
		
		private System.Nullable<Status0> _status;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WorkFlowListItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyWorkfl", Storage="_myWorkflow", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> MyWorkflow {
			get {
				return this._myWorkflow;
			}
			set {
				if ((value != this._myWorkflow)) {
					this.OnPropertyChanging("MyWorkflow", this._myWorkflow);
					this._myWorkflow = value;
					this.OnPropertyChanged("MyWorkflow");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_status", FieldType="Choice")]
		public System.Nullable<Status0> Status {
			get {
				return this._status;
			}
			set {
				if ((value != this._status)) {
					this.OnPropertyChanging("Status", this._status);
					this._status = value;
					this.OnPropertyChanged("Status");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="WorkSummary")]
	public partial class WorkSummaryItem : Item {
		
		private string _content;
		
		private string _createdBy;
		
		private string _createdDate;
		
		private System.Nullable<int> _workSummaryWorkflow;
		
		private System.Nullable<SendOrNot> _sendOrNot;
		
		private Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>> _approverId;
		
		private Microsoft.SharePoint.Linq.LookupList<string> _approverTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WorkSummaryItem() {
			this._approverId = new Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>>();
			this._approverId.OnChanged += new System.EventHandler(this.OnApproverIdChanged);
			this._approverId.OnChanging += new System.EventHandler(this.OnApproverIdChanging);
			this._approverTitle = new Microsoft.SharePoint.Linq.LookupList<string>();
			this._approverTitle.OnChanged += new System.EventHandler(this.OnApproverTitleChanged);
			this._approverTitle.OnChanging += new System.EventHandler(this.OnApproverTitleChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Content", Storage="_content", Required=true, FieldType="Note")]
		public string Content {
			get {
				return this._content;
			}
			set {
				if ((value != this._content)) {
					this.OnPropertyChanging("Content", this._content);
					this._content = value;
					this.OnPropertyChanged("Content");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CreatedBy", Storage="_createdBy", FieldType="Text")]
		public string CreatedBy {
			get {
				return this._createdBy;
			}
			set {
				if ((value != this._createdBy)) {
					this.OnPropertyChanging("CreatedBy", this._createdBy);
					this._createdBy = value;
					this.OnPropertyChanged("CreatedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CreatedDate", Storage="_createdDate", FieldType="Text")]
		public string CreatedDate {
			get {
				return this._createdDate;
			}
			set {
				if ((value != this._createdDate)) {
					this.OnPropertyChanging("CreatedDate", this._createdDate);
					this._createdDate = value;
					this.OnPropertyChanged("CreatedDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkSumm", Storage="_workSummaryWorkflow", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> WorkSummaryWorkflow {
			get {
				return this._workSummaryWorkflow;
			}
			set {
				if ((value != this._workSummaryWorkflow)) {
					this.OnPropertyChanging("WorkSummaryWorkflow", this._workSummaryWorkflow);
					this._workSummaryWorkflow = value;
					this.OnPropertyChanged("WorkSummaryWorkflow");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SendOrNot", Storage="_sendOrNot", FieldType="Choice")]
		public System.Nullable<SendOrNot> SendOrNot {
			get {
				return this._sendOrNot;
			}
			set {
				if ((value != this._sendOrNot)) {
					this.OnPropertyChanging("SendOrNot", this._sendOrNot);
					this._sendOrNot = value;
					this.OnPropertyChanged("SendOrNot");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SendMailTo", Storage="_approverId", Required=true, FieldType="User", IsLookupId=true)]
		public System.Collections.Generic.IList<System.Nullable<int>> ApproverId {
			get {
				return this._approverId;
			}
			set {
				this._approverId.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SendMailTo", Storage="_approverTitle", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public System.Collections.Generic.IList<string> ApproverTitle {
			get {
				return this._approverTitle;
			}
			set {
				this._approverTitle.Assign(value);
			}
		}
		
		private void OnApproverIdChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ApproverId", this._approverId.Clone());
		}
		
		private void OnApproverIdChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ApproverId");
		}
		
		private void OnApproverTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ApproverTitle", this._approverTitle.Clone());
		}
		
		private void OnApproverTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ApproverTitle");
		}
	}
	
	/// <summary>
	/// Create a new news item, status or other short piece of information.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Announcement", Id="0x0104", List="Announcements")]
	public partial class AnnouncementsAnnouncement : Announcement {
		
		private string _instance;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AnnouncementsAnnouncement() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Instance", Storage="_instance", FieldType="Text")]
		public string Instance {
			get {
				return this._instance;
			}
			set {
				if ((value != this._instance)) {
					this.OnPropertyChanging("Instance", this._instance);
					this._instance = value;
					this.OnPropertyChanged("Instance");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101", List="ApprovalWF")]
	public partial class ApprovalWFDocument : Document {
		
		private System.Nullable<int> _approvalWF;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ApprovalWFDocument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Approval", Storage="_approvalWF", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> ApprovalWF {
			get {
				return this._approvalWF;
			}
			set {
				if ((value != this._approvalWF)) {
					this.OnPropertyChanging("ApprovalWF", this._approvalWF);
					this._approvalWF = value;
					this.OnPropertyChanged("ApprovalWF");
				}
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="ApprovalWF Tasks")]
	public partial class ApprovalWFTasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ApprovalWFTasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="ApprovalWF Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="Asp.Net Form Tasks")]
	public partial class AspNetFormTasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AspNetFormTasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Asp.Net Form Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101", List="CamlTestLib")]
	public partial class CamlTestLibDocument : Document {
		
		private string _play;
		
		private string _seq;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CamlTestLibDocument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Edit_Copy", Storage="_play", FieldType="Computed")]
		public string Play {
			get {
				return this._play;
			}
			set {
				if ((value != this._play)) {
					this.OnPropertyChanging("Play", this._play);
					this._play = value;
					this.OnPropertyChanged("Play");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Edit_Copy0", Storage="_seq", FieldType="Computed")]
		public string Seq {
			get {
				return this._seq;
			}
			set {
				if ((value != this._seq)) {
					this.OnPropertyChanging("Seq", this._seq);
					this._seq = value;
					this.OnPropertyChanged("Seq");
				}
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="CF Tasks")]
	public partial class CFTasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CFTasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="CF Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="CollectFeedback Tasks")]
	public partial class CollectFeedbackTasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CollectFeedbackTasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="CollectFeedback Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="Expenditure Request Approval Tasks")]
	public partial class ExpenditureRequestApprovalTasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ExpenditureRequestApprovalTasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Expenditure Request Approval Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101", List="Expense Reports")]
	public partial class ExpenseReportsDocument : Document {
		
		private System.Nullable<int> _expenseReportsForApproval;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ExpenseReportsDocument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExpenseR", Storage="_expenseReportsForApproval", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> ExpenseReportsForApproval {
			get {
				return this._expenseReportsForApproval;
			}
			set {
				if ((value != this._expenseReportsForApproval)) {
					this.OnPropertyChanging("ExpenseReportsForApproval", this._expenseReportsForApproval);
					this._expenseReportsForApproval = value;
					this.OnPropertyChanged("ExpenseReportsForApproval");
				}
			}
		}
	}
	
	/// <summary>
	/// Upload an asset.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Rich Media Asset", Id="0x0101009148F5A04DDD49CBA7127AADA5FB792B")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Image))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Audio))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Video))]
	public partial class RichMediaAsset : Document {
		
		private string _preview;
		
		private string _keywords;
		
		private string _thumbnailPreview;
		
		private System.Nullable<int> _pictureWidth;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public RichMediaAsset() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PreviewOnForm", Storage="_preview", FieldType="Computed")]
		public string Preview {
			get {
				return this._preview;
			}
			set {
				if ((value != this._preview)) {
					this.OnPropertyChanging("Preview", this._preview);
					this._preview = value;
					this.OnPropertyChanged("Preview");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Keywords", Storage="_keywords", FieldType="Note")]
		public string Keywords {
			get {
				return this._keywords;
			}
			set {
				if ((value != this._keywords)) {
					this.OnPropertyChanging("Keywords", this._keywords);
					this._keywords = value;
					this.OnPropertyChanged("Keywords");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ThumbnailOnForm", Storage="_thumbnailPreview", FieldType="Computed")]
		public string ThumbnailPreview {
			get {
				return this._thumbnailPreview;
			}
			set {
				if ((value != this._thumbnailPreview)) {
					this.OnPropertyChanging("ThumbnailPreview", this._thumbnailPreview);
					this._thumbnailPreview = value;
					this.OnPropertyChanged("ThumbnailPreview");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageWidth", Storage="_pictureWidth", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> PictureWidth {
			get {
				return this._pictureWidth;
			}
			set {
				if ((value != this._pictureWidth)) {
					this.OnPropertyChanging("PictureWidth", this._pictureWidth);
					this._pictureWidth = value;
					this.OnPropertyChanged("PictureWidth");
				}
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="InfoPathTask")]
	public partial class InfoPathTaskTask : Task {
		
		private System.Nullable<System.DateTime> _field2;
		
		private System.Nullable<Field3> _field3;
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		private Microsoft.SharePoint.Linq.EntityRef<Item> _field1;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public InfoPathTaskTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this._field1 = new Microsoft.SharePoint.Linq.EntityRef<Item>();
			this._field1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnField1Sync);
			this._field1.OnChanged += new System.EventHandler(this.OnField1Changed);
			this._field1.OnChanging += new System.EventHandler(this.OnField1Changing);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="field2", Storage="_field2", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Field2 {
			get {
				return this._field2;
			}
			set {
				if ((value != this._field2)) {
					this.OnPropertyChanging("Field2", this._field2);
					this._field2 = value;
					this.OnPropertyChanged("Field2");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="field3", Storage="_field3", FieldType="Choice")]
		public System.Nullable<Field3> Field3 {
			get {
				return this._field3;
			}
			set {
				if ((value != this._field3)) {
					this.OnPropertyChanging("Field3", this._field3);
					this._field3 = value;
					this.OnPropertyChanged("Field3");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="InfoPathTask")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="field1", Storage="_field1", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Project")]
		public Item Field1 {
			get {
				return this._field1.GetEntity();
			}
			set {
				this._field1.SetEntity(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
		
		private void OnField1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Field1", this._field1.Clone());
		}
		
		private void OnField1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Field1");
		}
		
		private void OnField1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="MyProjectTask")]
	public partial class MyProjectTaskTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public MyProjectTaskTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="MyProjectTask")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="MyTask")]
	public partial class MyTaskTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public MyTaskTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="MyTask")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// System Page is a system content type template created by the Publishing Resources feature, and it cannot be modified. To add columns to the Pages library, update the Page content type template.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="System Page", Id="0x010100C568DB52D9D0A14D9B2FDCC96666E9F2")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Page))]
	public partial class SystemPage : Document {
		
		private string _comments;
		
		private string _contactEMailAddress;
		
		private string _contactName;
		
		private string _contactPicture;
		
		private string _pageLayout;
		
		private System.Nullable<int> _contactId;
		
		private string _contact;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SystemPage() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContactEmail", Storage="_contactEMailAddress", FieldType="Text")]
		public string ContactEMailAddress {
			get {
				return this._contactEMailAddress;
			}
			set {
				if ((value != this._contactEMailAddress)) {
					this.OnPropertyChanging("ContactEMailAddress", this._contactEMailAddress);
					this._contactEMailAddress = value;
					this.OnPropertyChanged("ContactEMailAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContactName", Storage="_contactName", FieldType="Text")]
		public string ContactName {
			get {
				return this._contactName;
			}
			set {
				if ((value != this._contactName)) {
					this.OnPropertyChanging("ContactName", this._contactName);
					this._contactName = value;
					this.OnPropertyChanged("ContactName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContactPicture", Storage="_contactPicture", FieldType="Url")]
		public string ContactPicture {
			get {
				return this._contactPicture;
			}
			set {
				if ((value != this._contactPicture)) {
					this.OnPropertyChanging("ContactPicture", this._contactPicture);
					this._contactPicture = value;
					this.OnPropertyChanged("ContactPicture");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingPageLayout", Storage="_pageLayout", ReadOnly=true, FieldType="Url")]
		public string PageLayout {
			get {
				return this._pageLayout;
			}
			set {
				if ((value != this._pageLayout)) {
					this.OnPropertyChanging("PageLayout", this._pageLayout);
					this._pageLayout = value;
					this.OnPropertyChanged("PageLayout");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContact", Storage="_contactId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ContactId {
			get {
				return this._contactId;
			}
			set {
				if ((value != this._contactId)) {
					this.OnPropertyChanging("ContactId", this._contactId);
					this._contactId = value;
					this.OnPropertyChanged("ContactId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContact", Storage="_contact", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string Contact {
			get {
				return this._contact;
			}
			set {
				if ((value != this._contact)) {
					this.OnPropertyChanging("Contact", this._contact);
					this._contact = value;
					this.OnPropertyChanged("Contact");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new meeting, deadline or other event.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Event", Id="0x0102", List="PTO Calendar")]
	public partial class PTOCalendarEvent : Event {
		
		private System.Nullable<int> _pTOWorkflow;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PTOCalendarEvent() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EventDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public override System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Note")]
		public override string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PTOWorkf", Storage="_pTOWorkflow", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> PTOWorkflow {
			get {
				return this._pTOWorkflow;
			}
			set {
				if ((value != this._pTOWorkflow)) {
					this.OnPropertyChanging("PTOWorkflow", this._pTOWorkflow);
					this._pTOWorkflow = value;
					this.OnPropertyChanged("PTOWorkflow");
				}
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="PTO Workflow Tasks")]
	public partial class PTOWorkflowTasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PTOWorkflowTasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="PTO Workflow Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Create a new link to a Web page or other resource.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Link", Id="0x0105", List="Salary")]
	public partial class SalaryLink : Link {
		
		private System.Nullable<double> _wage;
		
		private string _title0;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SalaryLink() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="wage", Storage="_wage", FieldType="Currency")]
		public System.Nullable<double> Wage {
			get {
				return this._wage;
			}
			set {
				if ((value != this._wage)) {
					this.OnPropertyChanging("Wage", this._wage);
					this._wage = value;
					this.OnPropertyChanged("Wage");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="title0", Storage="_title0", FieldType="Text")]
		public string Title0 {
			get {
				return this._title0;
			}
			set {
				if ((value != this._title0)) {
					this.OnPropertyChanging("Title0", this._title0);
					this._title0 = value;
					this.OnPropertyChanged("Title0");
				}
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="signature Tasks")]
	public partial class SignatureTasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SignatureTasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="signature Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101", List="SignatureWF")]
	public partial class SignatureWFDocument : Document {
		
		private System.Nullable<int> _signature;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SignatureWFDocument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Signatur", Storage="_signature", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> Signature {
			get {
				return this._signature;
			}
			set {
				if ((value != this._signature)) {
					this.OnPropertyChanging("Signature", this._signature);
					this._signature = value;
					this.OnPropertyChanged("Signature");
				}
			}
		}
	}
	
	/// <summary>
	/// Track an issue or problem.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Issue", Id="0x0103", List="Support Requests")]
	public partial class SupportRequestsIssue : Issue {
		
		private System.Nullable<int> _aspNetForm;
		
		private Microsoft.SharePoint.Linq.EntitySet<SupportRequestsIssue> _supportRequestsIssue0;
		
		private Microsoft.SharePoint.Linq.EntitySet<SupportRequestsIssue> _relatedIssues;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SupportRequestsIssue() {
			this._supportRequestsIssue0 = new Microsoft.SharePoint.Linq.EntitySet<SupportRequestsIssue>();
			this._supportRequestsIssue0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SupportRequestsIssue>>(this.OnSupportRequestsIssue0Sync);
			this._supportRequestsIssue0.OnChanged += new System.EventHandler(this.OnSupportRequestsIssue0Changed);
			this._supportRequestsIssue0.OnChanging += new System.EventHandler(this.OnSupportRequestsIssue0Changing);
			this._relatedIssues = new Microsoft.SharePoint.Linq.EntitySet<SupportRequestsIssue>();
			this._relatedIssues.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SupportRequestsIssue>>(this.OnRelatedIssuesSync);
			this._relatedIssues.OnChanged += new System.EventHandler(this.OnRelatedIssuesChanged);
			this._relatedIssues.OnChanging += new System.EventHandler(this.OnRelatedIssuesChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AspNetFo", Storage="_aspNetForm", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> AspNetForm {
			get {
				return this._aspNetForm;
			}
			set {
				if ((value != this._aspNetForm)) {
					this.OnPropertyChanging("AspNetForm", this._aspNetForm);
					this._aspNetForm = value;
					this.OnPropertyChanged("AspNetForm");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_issueStatus", FieldType="Choice")]
		public override System.Nullable<IssueStatus> IssueStatus {
			get {
				return this._issueStatus;
			}
			set {
				if ((value != this._issueStatus)) {
					this.OnPropertyChanging("IssueStatus", this._issueStatus);
					this._issueStatus = value;
					this.OnPropertyChanged("IssueStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="RelatedIssues", Storage="_supportRequestsIssue0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Support Requests")]
		public Microsoft.SharePoint.Linq.EntitySet<SupportRequestsIssue> SupportRequestsIssue0 {
			get {
				return this._supportRequestsIssue0;
			}
			set {
				this._supportRequestsIssue0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="RelatedIssues", Storage="_relatedIssues", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Support Requests")]
		public Microsoft.SharePoint.Linq.EntitySet<SupportRequestsIssue> RelatedIssues {
			get {
				return this._relatedIssues;
			}
			set {
				this._relatedIssues.Assign(value);
			}
		}
		
		private void OnSupportRequestsIssue0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SupportRequestsIssue0", this._supportRequestsIssue0.Clone());
		}
		
		private void OnSupportRequestsIssue0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SupportRequestsIssue0");
		}
		
		private void OnSupportRequestsIssue0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SupportRequestsIssue> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.RelatedIssues.Add(this);
			}
			else {
				e.Item.RelatedIssues.Remove(this);
			}
		}
		
		private void OnRelatedIssuesChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("RelatedIssues", this._relatedIssues.Clone());
		}
		
		private void OnRelatedIssuesChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("RelatedIssues");
		}
		
		private void OnRelatedIssuesSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SupportRequestsIssue> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SupportRequestsIssue0.Add(this);
			}
			else {
				e.Item.SupportRequestsIssue0.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="Tasks")]
	public partial class TasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Store information about a business or personal contact.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Contact", Id="0x0106", List="test1")]
	public partial class Test1Contact : Contact {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Test1Contact() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Email", Storage="_eMail", FieldType="Text")]
		public override string EMail {
			get {
				return this._eMail;
			}
			set {
				if ((value != this._eMail)) {
					this.OnPropertyChanging("EMail", this._eMail);
					this._eMail = value;
					this.OnPropertyChanged("EMail");
				}
			}
		}
	}
	
	/// <summary>
	/// My Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TripReport", Id="0x0101002405B3E5EE0A4E359622F427BF1C1F92")]
	public partial class TripReport : Document {
		
		private string _conferenceLocation;
		
		private string _conferenceName;
		
		private System.Nullable<TripType> _tripType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TripReport() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ConferenceLocation", Storage="_conferenceLocation", FieldType="Text")]
		public string ConferenceLocation {
			get {
				return this._conferenceLocation;
			}
			set {
				if ((value != this._conferenceLocation)) {
					this.OnPropertyChanging("ConferenceLocation", this._conferenceLocation);
					this._conferenceLocation = value;
					this.OnPropertyChanged("ConferenceLocation");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ConferenceName", Storage="_conferenceName", FieldType="Text")]
		public string ConferenceName {
			get {
				return this._conferenceName;
			}
			set {
				if ((value != this._conferenceName)) {
					this.OnPropertyChanging("ConferenceName", this._conferenceName);
					this._conferenceName = value;
					this.OnPropertyChanged("ConferenceName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TripType", Storage="_tripType", FieldType="Choice")]
		public System.Nullable<TripType> TripType {
			get {
				return this._tripType;
			}
			set {
				if ((value != this._tripType)) {
					this.OnPropertyChanging("TripType", this._tripType);
					this._tripType = value;
					this.OnPropertyChanged("TripType");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101", List="WFDocLib")]
	public partial class WFDocLibDocument : Document {
		
		private System.Nullable<int> _wFDoc;
		
		private System.Nullable<Status1> _status;
		
		private System.Nullable<int> _assignedToId;
		
		private string _assignedToImnName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WFDocLibDocument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WFDoc", Storage="_wFDoc", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> WFDoc {
			get {
				return this._wFDoc;
			}
			set {
				if ((value != this._wFDoc)) {
					this.OnPropertyChanging("WFDoc", this._wFDoc);
					this._wFDoc = value;
					this.OnPropertyChanged("WFDoc");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkStatus", Storage="_status", FieldType="Choice")]
		public System.Nullable<Status1> Status {
			get {
				return this._status;
			}
			set {
				if ((value != this._status)) {
					this.OnPropertyChanging("Status", this._status);
					this._status = value;
					this.OnPropertyChanged("Status");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Assigned_x0020_To0", Storage="_assignedToId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AssignedToId {
			get {
				return this._assignedToId;
			}
			set {
				if ((value != this._assignedToId)) {
					this.OnPropertyChanging("AssignedToId", this._assignedToId);
					this._assignedToId = value;
					this.OnPropertyChanged("AssignedToId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Assigned_x0020_To0", Storage="_assignedToImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string AssignedToImnName {
			get {
				return this._assignedToImnName;
			}
			set {
				if ((value != this._assignedToImnName)) {
					this.OnPropertyChanging("AssignedToImnName", this._assignedToImnName);
					this._assignedToImnName = value;
					this.OnPropertyChanged("AssignedToImnName");
				}
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="Work Summary Workflow Tasks")]
	public partial class WorkSummaryWorkflowTasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WorkSummaryWorkflowTasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Work Summary Workflow Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="Workflow Tasks")]
	public partial class WorkflowTasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WorkflowTasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Workflow Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="ApprovalWF Tasks")]
	public partial class ApprovalWFTasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ApprovalWFTasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="ApprovalWF Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="Asp.Net Form Tasks")]
	public partial class AspNetFormTasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AspNetFormTasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Asp.Net Form Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="CF Tasks")]
	public partial class CFTasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CFTasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="CF Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="CollectFeedback Tasks")]
	public partial class CollectFeedbackTasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CollectFeedbackTasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="CollectFeedback Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Fill out this form.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Form", Id="0x010101", List="date")]
	public partial class DateForm : Form {
		
		private System.Nullable<System.DateTime> _date;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DateForm() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Date", Storage="_date", ReadOnly=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> Date {
			get {
				return this._date;
			}
			set {
				if ((value != this._date)) {
					this.OnPropertyChanging("Date", this._date);
					this._date = value;
					this.OnPropertyChanged("Date");
				}
			}
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="Expenditure Request Approval Tasks")]
	public partial class ExpenditureRequestApprovalTasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ExpenditureRequestApprovalTasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Expenditure Request Approval Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="InfoPathTask")]
	public partial class InfoPathTaskSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public InfoPathTaskSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="InfoPathTask")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Fill out this form.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Form", Id="0x010101", List="MyForm")]
	public partial class MyFormForm : Form {
		
		private System.Nullable<System.DateTime> _expenseDate;
		
		private System.Nullable<double> _totalAmount;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public MyFormForm() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expense_x0020_Date", Storage="_expenseDate", ReadOnly=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> ExpenseDate {
			get {
				return this._expenseDate;
			}
			set {
				if ((value != this._expenseDate)) {
					this.OnPropertyChanging("ExpenseDate", this._expenseDate);
					this._expenseDate = value;
					this.OnPropertyChanged("ExpenseDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Total_x0020_Amount", Storage="_totalAmount", ReadOnly=true, FieldType="Number")]
		public System.Nullable<double> TotalAmount {
			get {
				return this._totalAmount;
			}
			set {
				if ((value != this._totalAmount)) {
					this.OnPropertyChanging("TotalAmount", this._totalAmount);
					this._totalAmount = value;
					this.OnPropertyChanged("TotalAmount");
				}
			}
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="MyProjectTask")]
	public partial class MyProjectTaskSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public MyProjectTaskSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="MyProjectTask")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="MyTask")]
	public partial class MyTaskSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public MyTaskSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="MyTask")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Upload an image or a photograph.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Picture", Id="0x010102", List="pic")]
	public partial class PicPicture : Picture {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PicPicture() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_comments", FieldType="Note")]
		public override string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string PreviewImageURL {
			get {
				throw new System.InvalidOperationException("Field AlternateThumbnailUrl was removed from content type Picture.");
			}
			set {
				throw new System.InvalidOperationException("Field AlternateThumbnailUrl was removed from content type Picture.");
			}
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="PTO Workflow Tasks")]
	public partial class PTOWorkflowTasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PTOWorkflowTasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="PTO Workflow Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="signature Tasks")]
	public partial class SignatureTasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SignatureTasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="signature Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="Tasks")]
	public partial class TasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="Work Summary Workflow Tasks")]
	public partial class WorkSummaryWorkflowTasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WorkSummaryWorkflowTasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Work Summary Workflow Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="Workflow Tasks")]
	public partial class WorkflowTasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WorkflowTasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Workflow Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Upload an image.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Image", Id="0x0101009148F5A04DDD49CBA7127AADA5FB792B00AADE34325A8B49CDA8BB4DB53328F214")]
	public partial class Image : RichMediaAsset {
		
		private string _pictureSize;
		
		private System.Nullable<int> _pictureHeight;
		
		private string _comments;
		
		private string _author;
		
		private System.Nullable<System.DateTime> _datePictureTaken;
		
		private string _copyright;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Image() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageSize", Storage="_pictureSize", FieldType="Computed")]
		public string PictureSize {
			get {
				return this._pictureSize;
			}
			set {
				if ((value != this._pictureSize)) {
					this.OnPropertyChanging("PictureSize", this._pictureSize);
					this._pictureSize = value;
					this.OnPropertyChanged("PictureSize");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageHeight", Storage="_pictureHeight", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> PictureHeight {
			get {
				return this._pictureHeight;
			}
			set {
				if ((value != this._pictureHeight)) {
					this.OnPropertyChanging("PictureHeight", this._pictureHeight);
					this._pictureHeight = value;
					this.OnPropertyChanged("PictureHeight");
				}
			}
		}
		
		/// <summary>
		/// A summary of this resource
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		/// <summary>
		/// The primary author
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Author", Storage="_author", FieldType="Text")]
		public string Author {
			get {
				return this._author;
			}
			set {
				if ((value != this._author)) {
					this.OnPropertyChanging("Author", this._author);
					this._author = value;
					this.OnPropertyChanged("Author");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageCreateDate", Storage="_datePictureTaken", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DatePictureTaken {
			get {
				return this._datePictureTaken;
			}
			set {
				if ((value != this._datePictureTaken)) {
					this.OnPropertyChanging("DatePictureTaken", this._datePictureTaken);
					this._datePictureTaken = value;
					this.OnPropertyChanged("DatePictureTaken");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="wic_System_Copyright", Storage="_copyright", FieldType="Text")]
		public string Copyright {
			get {
				return this._copyright;
			}
			set {
				if ((value != this._copyright)) {
					this.OnPropertyChanging("Copyright", this._copyright);
					this._copyright = value;
					this.OnPropertyChanged("Copyright");
				}
			}
		}
	}
	
	/// <summary>
	/// Upload an audio file.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Audio", Id="0x0101009148F5A04DDD49CBA7127AADA5FB792B006973ACD696DC4858A76371B2FB2F439A")]
	public partial class Audio : RichMediaAsset {
		
		private string _author;
		
		private string _comments;
		
		private string _previewImageURL;
		
		private string _copyright;
		
		private System.Nullable<int> _lengthSeconds;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Audio() {
			this.OnCreated();
		}
		
		/// <summary>
		/// The primary author
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Author", Storage="_author", FieldType="Text")]
		public string Author {
			get {
				return this._author;
			}
			set {
				if ((value != this._author)) {
					this.OnPropertyChanging("Author", this._author);
					this._author = value;
					this.OnPropertyChanged("Author");
				}
			}
		}
		
		/// <summary>
		/// A summary of this resource
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlternateThumbnailUrl", Storage="_previewImageURL", FieldType="Url")]
		public string PreviewImageURL {
			get {
				return this._previewImageURL;
			}
			set {
				if ((value != this._previewImageURL)) {
					this.OnPropertyChanging("PreviewImageURL", this._previewImageURL);
					this._previewImageURL = value;
					this.OnPropertyChanged("PreviewImageURL");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="wic_System_Copyright", Storage="_copyright", FieldType="Text")]
		public string Copyright {
			get {
				return this._copyright;
			}
			set {
				if ((value != this._copyright)) {
					this.OnPropertyChanging("Copyright", this._copyright);
					this._copyright = value;
					this.OnPropertyChanged("Copyright");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLengthInSeconds", Storage="_lengthSeconds", FieldType="Integer")]
		public System.Nullable<int> LengthSeconds {
			get {
				return this._lengthSeconds;
			}
			set {
				if ((value != this._lengthSeconds)) {
					this.OnPropertyChanging("LengthSeconds", this._lengthSeconds);
					this._lengthSeconds = value;
					this.OnPropertyChanged("LengthSeconds");
				}
			}
		}
	}
	
	/// <summary>
	/// Upload a video file.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Video", Id="0x0101009148F5A04DDD49CBA7127AADA5FB792B00291D173ECE694D56B19D111489C4369D")]
	public partial class Video : RichMediaAsset {
		
		private string _author;
		
		private string _comments;
		
		private string _previewImageURL;
		
		private string _copyright;
		
		private System.Nullable<int> _lengthSeconds;
		
		private System.Nullable<int> _frameWidth;
		
		private System.Nullable<int> _frameHeight;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Video() {
			this.OnCreated();
		}
		
		/// <summary>
		/// The primary author
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Author", Storage="_author", FieldType="Text")]
		public string Author {
			get {
				return this._author;
			}
			set {
				if ((value != this._author)) {
					this.OnPropertyChanging("Author", this._author);
					this._author = value;
					this.OnPropertyChanged("Author");
				}
			}
		}
		
		/// <summary>
		/// A summary of this resource
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlternateThumbnailUrl", Storage="_previewImageURL", FieldType="Url")]
		public string PreviewImageURL {
			get {
				return this._previewImageURL;
			}
			set {
				if ((value != this._previewImageURL)) {
					this.OnPropertyChanging("PreviewImageURL", this._previewImageURL);
					this._previewImageURL = value;
					this.OnPropertyChanged("PreviewImageURL");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="wic_System_Copyright", Storage="_copyright", FieldType="Text")]
		public string Copyright {
			get {
				return this._copyright;
			}
			set {
				if ((value != this._copyright)) {
					this.OnPropertyChanging("Copyright", this._copyright);
					this._copyright = value;
					this.OnPropertyChanged("Copyright");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLengthInSeconds", Storage="_lengthSeconds", FieldType="Integer")]
		public System.Nullable<int> LengthSeconds {
			get {
				return this._lengthSeconds;
			}
			set {
				if ((value != this._lengthSeconds)) {
					this.OnPropertyChanging("LengthSeconds", this._lengthSeconds);
					this._lengthSeconds = value;
					this.OnPropertyChanged("LengthSeconds");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoWidthInPixels", Storage="_frameWidth", FieldType="Integer")]
		public System.Nullable<int> FrameWidth {
			get {
				return this._frameWidth;
			}
			set {
				if ((value != this._frameWidth)) {
					this.OnPropertyChanging("FrameWidth", this._frameWidth);
					this._frameWidth = value;
					this.OnPropertyChanged("FrameWidth");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoHeightInPixels", Storage="_frameHeight", FieldType="Integer")]
		public System.Nullable<int> FrameHeight {
			get {
				return this._frameHeight;
			}
			set {
				if ((value != this._frameHeight)) {
					this.OnPropertyChanging("FrameHeight", this._frameHeight);
					this._frameHeight = value;
					this.OnPropertyChanged("FrameHeight");
				}
			}
		}
	}
	
	/// <summary>
	/// Page is a system content type template created by the Publishing Resources feature. The column templates from Page will be added to all Pages libraries created by the Publishing feature.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Page", Id="0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF39")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ArticlePage))]
	public partial class Page : SystemPage {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Page() {
			this.OnCreated();
		}
	}
	
	/// <summary>
	/// Article Page is a system content type template created by the Publishing Resources feature. It is the associated content type template for the default page layouts used to create article pages in sites that have the Publishing feature enabled.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Article Page", Id="0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF390024245" +
		"7EFB8B24247815D688C526CD44D")]
	public partial class ArticlePage : Page {
		
		private string _byline;
		
		private System.Nullable<System.DateTime> _articleDate;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ArticlePage() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ArticleByLine", Storage="_byline", FieldType="Text")]
		public string Byline {
			get {
				return this._byline;
			}
			set {
				if ((value != this._byline)) {
					this.OnPropertyChanging("Byline", this._byline);
					this._byline = value;
					this.OnPropertyChanged("Byline");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ArticleStartDate", Storage="_articleDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ArticleDate {
			get {
				return this._articleDate;
			}
			set {
				if ((value != this._articleDate)) {
					this.OnPropertyChanging("ArticleDate", this._articleDate);
					this._articleDate = value;
					this.OnPropertyChanged("ArticleDate");
				}
			}
		}
	}
	
	public enum Priority : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) High")]
		_1High = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Normal")]
		_2Normal = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Low")]
		_3Low = 8,
	}
	
	public enum TaskStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Not Started")]
		NotStarted = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="In Progress")]
		InProgress = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Completed")]
		Completed = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Deferred")]
		Deferred = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Waiting on someone else")]
		WaitingOnSomeoneElse = 32,
	}
	
	public enum Category : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) Category1")]
		_1Category1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Category2")]
		_2Category2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Category3")]
		_3Category3 = 8,
	}
	
	public enum IssueStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Active")]
		Active = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Resolved")]
		Resolved = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Closed")]
		Closed = 8,
	}
	
	public enum Status : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Pending Assignment")]
		PendingAssignment = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Pending Completed")]
		PendingCompleted = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="On Hold")]
		OnHold = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Completed")]
		Completed = 16,
	}
	
	public enum DormitoryName : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="101")]
		_101 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="102")]
		_102 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="201")]
		_201 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="202")]
		_202 = 16,
	}
	
	public enum WorkCategory : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="A")]
		A = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="B")]
		B = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="C")]
		C = 8,
	}
	
	public enum Status0 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="草稿")]
		草稿 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="发起")]
		发起 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="通过")]
		通过 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="驳回")]
		驳回 = 16,
	}
	
	public enum SendOrNot : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Yes")]
		Yes = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="No")]
		No = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="weq")]
		Weq = 8,
	}
	
	public enum Field3 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Enter Choice #1")]
		EnterChoice1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Enter Choice #2")]
		EnterChoice2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Enter Choice #3")]
		EnterChoice3 = 8,
	}
	
	public enum TripType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Personal")]
		Personal = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Business")]
		Business = 4,
	}
	
	public enum Status1 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Create")]
		Create = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Review")]
		Review = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Test")]
		Test = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Approved")]
		Approved = 16,
	}
}
